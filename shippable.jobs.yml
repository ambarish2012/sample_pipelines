jobs:
  - name: simple-mani-runclisample
    type: manifest
    flags:
      - runclisample
    steps:
      - IN: simple-image-runclisample
      - IN: myParams-runclisample

  - name: out-mani-runclisample
    type: manifest
    flags:
      - runclisample
    steps:
      - IN: simple-image-runclisample

  - name: test-mani-runclisample
    type: manifest
    flags:
      - runclisample
    steps:
      - IN: testOutImage-runclisample


  - name: simple-release-runclisample
    type: release
    flags:
      - runclisample
    steps:
      - IN: simple-mani-runclisample
      - IN: simple-version-runclisample
      - TASK: managed
        bump: patch

  - name: runShCheck-runclisample
    type: runCLI
    flags:
      - runclisample
    steps:
      - IN: stagingTrigger-runclisample
      - IN: simple-release-runclisample
      - IN: kube-cli-config-runclisample
      - OUT: testOutImage-runclisample
      - OUT: out-mani-runclisample
      - TASK:
        - script: echo "resource ID is $RESOURCE_ID"
        - script: echo "versionName=$BUILD_NUMBER" > /build/state/testOutImage-runclisample.env
        - script: echo "versionName=$BUILD_NUMBER" > /build/state/runShCheck-runclisample.env
        - script: echo "extraProperty=$JOB_NAME" >> /build/state/testOutImage-runclisample.env
        - script: sudo apt-get install -y jq
        - script: ls -latr /build/state
        - script: cat /build/state/testOutImage-runclisample.env
        - script: cat /build/state/runShCheck-runclisample.env
        - script: ls -latr /build/IN/simple-release-runclisample/release
        - script: cat $RUNSHCHECKrunclisample_PATH/message.json | jq '.'
        - script: kubectl get pods --all-namespaces

    on_failure:
      - script: echo "something failed"
    on_success:
      - script: echo "yay it worked"
